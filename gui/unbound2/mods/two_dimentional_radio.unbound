############################
#
#	IF YOU ARE READING THIS,
#	DO NOT, UNDER ANY CIRCUMSTANCES,
#	- MODIFY THIS MODIFICATION.
#	- COPY THIS MODIFICATION.
#	- USE OR IMPORT A SUBSET OF THIS MODIFICATION INTO ANOTHER MODIFICATION.
#	- EDIT OR CREATE ANOTHER MODIFICATION TO ACCOMMODATE THE FUNCTIONALITY THIS MODIFICATION PROVIDES.
#
#	THIS MODIFICATION MUST BE DISTRIBUTED AND USED AS IT IS.
#
#	!!!!! A VIOLATION WILL RESULT IN YOUR AND USER'S ACCOUNT SANCTIONS !!!!!
#
#	THESE ARE MANDATORY CONDITIONS THAT MUST BE MET IN ORDER TO FOLLOW THE REQUESTS FROM WG
#
#	YOU HAVE BEEN WARNED.
#


(def constant RPF_DIRECTION_MESSAGES [
	'RPF: N~NNE'
	'RPF: NNE~NE'
	'RPF: NE~ENE'
	'RPF: ENE~E'
	'RPF: E~ESE'
	'RPF: ESE~SE'
	'RPF: SE~SSE'
	'RPF: SSE~S'
	'RPF: S~SSW'
	'RPF: SSW~SW'
	'RPF: SW~WSW'
	'RPF: WSW~W'
	'RPF: W~WNW'
	'RPF: WNW~NW'
	'RPF: NW~NNW'
	'RPF: NNW~N'
])

(def constant RPF_SECTOR_WIDTH_DEG "360 / 16")
(def constant RPF_SECTOR_WIDTH_RAD "gradToRad(RPF_SECTOR_WIDTH_DEG)")

(def constant RPF_SECTOR_HALF_WIDTH_DEG "RPF_SECTOR_WIDTH_DEG / 2")
(def constant RPF_SECTOR_HALF_WIDTH_RAD "gradToRad(RPF_SECTOR_HALF_WIDTH_DEG)")

(def constant RPF_MESSAGE_COOLDOWN_DURATION "45")
(def constant RPF_MESSAGE_COOLDOWN_MAX_COUNT "3")


(def element MapShipMarker (_markerEntity:gfx, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(var isPlayerAvatar:bool = "_markerEntity.hasComponent(CC.playerAvatar)")
		(var isAlive:bool = "_markerEntity.health ? _markerEntity.health.isAlive : false" (event "_markerEntity.health.evIsAliveChanged"))

		(var target:gfx = "_markerEntity.target" (event "_markerEntity.evAdded") (event "_markerEntity.evRemoved"))
		(var targetFlags:number = "target ? target.flags : 0" (event "target.evChanged"))
		(var isTargetLocked:bool = "(targetFlags & LOCKABLE_WEAPONS) > 0")

		(var mapVisible:bool = "_markerEntity.visibility ? _markerEntity.visibility.mapVisible : false" (event "_markerEntity.visibility.evChanged"))
		(var worldVisible:bool = "_markerEntity.visibility ? _markerEntity.visibility.visible : false" (event "_markerEntity.visibility.evChanged"))

		(var markerYaw:number = "radToGrad(_markerEntity.mapPosition.yaw)" (event "evEnterFrame"))
		(var markerScale:number = "_itemScale / _mapScale")

		(macro SCOPE_IS_BATTLE_IN_PROGRESS "'isBattleInProgress'")
		(macro GET_BOT_CUSTOMIZATION_TAG_COMPONENT "_markerEntity") 

		(var minimapEntity:gfx = "$datahub.getSingleEntity(CC.minimap)")
		(var minimapComponent:gfx = "minimapEntity.minimap")
		(var angleToRotate:number = "minimapComponent ? minimapComponent.rotationAngleDeg : 0" (event "minimapComponent.evRotationAngleDegChanged"))

		(var rangesAlphaComponent:gfx = "$datahub.getPrimaryEntity(CC.minimapOption, SC.Battle.MINIMAP_OPTION.rangesAlpha).minimapOption")
		(var rangesAlpha:number = "rangesAlphaComponent.value * 0.01" (event "rangesAlphaComponent.evValueChanged"))
		
		(var shipNamesDisplayEnabledComponent:gfx = "$datahub.getPrimaryEntity(CC.minimapOption, SC.Battle.MINIMAP_OPTION.shipNamesDisplayEnabled).minimapOption")
		(var shipNamesDisplayEnabled:bool = "shipNamesDisplayEnabledComponent.value > 0" (event "shipNamesDisplayEnabledComponent.evValueChanged"))

		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var altVision:bool = "cameraEntity.camera ? cameraEntity.camera.altVision : false" (event "cameraEntity.camera.evAltVisionChanged"))
		(macro SCOPE_HIGHLIGHT_MARKER_ON_MAP_MOUSE_OVER "_markerEntity")

		(var relationComponent:gfx = "_markerEntity ? _markerEntity.relation : null")
		(var isAlly:bool = "relationComponent && relationComponent.value == SC.Battle.PLAYER_RELATION.ALLY" (event "relationComponent.evChanged"))
		(var isSelf:bool = "relationComponent && relationComponent.value == SC.Battle.PLAYER_RELATION.SELF" (event "relationComponent.evChanged"))

		# Mod

		# Chat
		(var messageCollection:gfx = "$datahub.getCollection(CC.battleChatAndLogMessage)")
		(var messagesCount:number = "messageCollection.items.length" (event "messageCollection.evAdded"))
		(var latestChatComponent:gfx = "messagesCount > 0
										? messageCollection.items[messagesCount - 1].battleChatAndLogMessage
										: null"
		)
		(var message:str = "latestChatComponent ? latestChatComponent.htmlText : ''")
		(var playerId:number = "latestChatComponent ? latestChatComponent.playerId : 0")
		(var isMessageSender:bool = "playerId == _markerEntity.avatar.id")

		# rpfDirectionIndex starts with 1 because the variable is initialized as 0. We cant tell if its just inited or received value when we use 0 as index.
		# self-assignment will fail in unbound (var rpfDirectionIndex "cond ? val1 : rpfDirectionIndex") so I have to use another variable to keep it
		# rewrite this if possible

		# RPF Direction
		(var _rpfDirectionIndex:number = "-1" watch=false)
		(bind _rpfDirectionIndex "rpfDirectionIndex" init=false watch=false (event "messageCollection.evAdded"))
		(var rpfDirectionIndex:number = "
								isMessageSender ?
									RPF_DIRECTION_MESSAGES[0]  in message ? 1 :
									RPF_DIRECTION_MESSAGES[1]  in message ? 2 :
									RPF_DIRECTION_MESSAGES[2]  in message ? 3 :
									RPF_DIRECTION_MESSAGES[3]  in message ? 4 :
									RPF_DIRECTION_MESSAGES[4]  in message ? 5 :
									RPF_DIRECTION_MESSAGES[5]  in message ? 6 :
									RPF_DIRECTION_MESSAGES[6]  in message ? 7 :
									RPF_DIRECTION_MESSAGES[7]  in message ? 8 :
									RPF_DIRECTION_MESSAGES[8]  in message ? 9 :
									RPF_DIRECTION_MESSAGES[9]  in message ? 10 :
									RPF_DIRECTION_MESSAGES[10] in message ? 11 :
									RPF_DIRECTION_MESSAGES[11] in message ? 12 :
									RPF_DIRECTION_MESSAGES[12] in message ? 13 :
									RPF_DIRECTION_MESSAGES[13] in message ? 14 :
									RPF_DIRECTION_MESSAGES[14] in message ? 15 :
									RPF_DIRECTION_MESSAGES[15] in message ? 16 :
									_rpfDirectionIndex
								: _rpfDirectionIndex"
		)

		# Self RPF
		(var rpfComponent:gfx = "$datahub.getSingleComponent(CC.nearestEnemyIndication)")
		(var selfRPFVisible:bool = "rpfComponent ? rpfComponent.showNearestEnemy : false" (event "rpfComponent.evShowNearestEnemyChanged"))
		(var selfRPFDirection:number = "rpfComponent ? (rpfComponent.yawToNearestEnemy - RPF_SECTOR_HALF_WIDTH_RAD) : 0" (event "rpfComponent.evYawToNearestEnemyChanged"))

		# RPF Info
		(var showNearestEnemy:bool = "	 isSelf ? selfRPFVisible
												: rpfDirectionIndex > 0"
		)
		(var yawToNearestEnemy:number = "isSelf ? selfRPFDirection
												: (rpfDirectionIndex - 1) * RPF_SECTOR_WIDTH_RAD"
		)
		(var degToNearestEnemy:number = "radToGrad(yawToNearestEnemy)")

		# Visibility
		(var isRPFVisible:bool = "showNearestEnemy && isAlive && (isAlly || isSelf)")
		#
	)

	# Mod
	(block
		(bind alpha "0.13")
		(bind visible "isRPFVisible")
		(style
			(bind rotation "degToNearestEnemy")
		)
		(controller $Sector
			(bind color "0xFFFFFF")
			(bind arc "RPF_SECTOR_WIDTH_DEG")
			(bind offset "-90")
			(bind radius "300")
		)
	)
	#

	(block
		(style
			(position = "absolute")
		)
		(controller $Instance (renderer = 'MapMarkerDirectionalLine')
			(bind enabled "(isPlayerAvatar || isTargetLocked) && isAlive && mapVisible && isBattleInProgress")
			(exprs
				(style
					(bind rotation "markerYaw")
					(bind alpha "rangesAlpha")
				)
			)
		)
	)

	(block
		(style
			(position = "absolute")
		)
		(controller $Instance (renderer = 'MapMarkerRanges')
			(bind enabled "isPlayerAvatar && isAlive")
			(args entity="_markerEntity" mapScale="_mapScale")
		)
	)

	(block
		(style
			(position = "absolute")
		)

		(macro EFFECT_HIGHLIGHT_MARKER_ON_MOUSE_OVER)
		(element MapMarkerShipIcon
			_markerEntity="_markerEntity"
			(style (bind rotation "tagPrefix ? 0 : markerYaw"))
			(macro BIND_FAIR_SCALE "markerScale")
		)
	)

	(block
		(style
			(position = "absolute")
			(pivotY = -8)
			(bind rotation "-(angleToRotate)")
		)
		(block
			(controller $Instance (renderer = 'MapMarkerShipName')
				(bind enabled "!(isPlayerAvatar) && isAlive && (shipNamesDisplayEnabled || altVision)")
				(args _markerEntity="_markerEntity")
			)
		)
		(macro BIND_FAIR_SCALE "markerScale")
	)
)

(def element RPF_TwoDimentionalRadio ()
	(scope
		# Event
		(event evSendMessage)
		(event evStartCoolDown)
		(event evEndCoolDown)

		# RPF
		(var rpfComponent:gfx = "$datahub.getSingleComponent(CC.nearestEnemyIndication)")
		(var isRPFVisible:bool = "rpfComponent ? rpfComponent.showNearestEnemy : false" (event "rpfComponent.evShowNearestEnemyChanged"))
		(var yawToNearestEnemy:number = "rpfComponent ? rpfComponent.yawToNearestEnemy : 0" (event "rpfComponent.evYawToNearestEnemyChanged"))

		# Chat
		(var chatComponent:gfx = "$datahub.getSingleComponent(CC.battleChatAndLog)")
		(var currentChannelId:number = "chatComponent.currentChannelId" (event "chatComponent.evChannelChanged"))
		(var isDivisionChat:bool = "currentChannelId == SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.DIVISION")
		(var isTeamChat:bool = "currentChannelId == SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.TEAM")
		(var isAllyChat:bool = "isTeamChat || isDivisionChat")

		# RPF Message
		(var rpfMessageIndex:number = "round((yawToNearestEnemy - RPF_SECTOR_HALF_WIDTH_RAD) / RPF_SECTOR_WIDTH_RAD)")
		(var rpfMessage:str = "RPF_DIRECTION_MESSAGES[rpfMessageIndex]")

		# Cooldown
		(var battleInfoComponent:gfx = "$datahub.getSingleComponent(CC.battleInfo)")
		(var battleType:str = "battleInfoComponent.battleType")
		(var isClanBattle:bool = "battleType == SC.Common.BATTLE_TYPES.CLAN_BATTLE")
		(var isTrainingBattle:bool = "battleType == SC.Common.BATTLE_TYPES.TRAINING_BATTLE")
		(var isAntiSpamEnabled:bool = "!(isClanBattle || isTrainingBattle || isDivisionChat)")

		(var coolDownCount:number = "0" watch=false)
		(bind coolDownCount "coolDownCount + 1" watch=false init=false (event "evStartCoolDown")) # evStartCoolDown will trigger only when (isTeamChat == true)
		(bind coolDownCount "coolDownCount - 1" watch=false init=false (event "evEndCoolDown"))
		(var isOnCoolDown:bool = "isAntiSpamEnabled ? coolDownCount + 1 > RPF_MESSAGE_COOLDOWN_MAX_COUNT : false")

		# Quick Command
		(var commandComponent:gfx = "$datahub.getSingleComponent(CC.quickCommandsPanel)")
		(var isCommandPanelActive:bool = "commandComponent.active" (event "commandComponent.evActiveChanged"))

		# Availability
		(var canSendChat:bool = "isCommandPanelActive && isRPFVisible && isAllyChat && !isOnCoolDown")		
	)

	(dispatch evSendMessage watch=false init=false (bind trigger "isCommandPanelActive") (bind enabled "canSendChat"))
	(dispatch evStartCoolDown args="{}" watch=false init=false (bind enabled "isTeamChat") (event "evSendMessage"))
	(dispatch evEndCoolDown	args="{}" delay="RPF_MESSAGE_COOLDOWN_DURATION" watch=false init=false (event "evStartCoolDown"))

	(bindcall externalCall 'inputMapping.onAction' "['battleChat.outgoingMessage', {'message': rpfMessage}]" watch=false init=false (event "evSendMessage"))
)